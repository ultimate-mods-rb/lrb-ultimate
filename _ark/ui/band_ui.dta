#define COMMON_ERROR_HANDLERS (COMMON_DIALOG_PANEL_HANDLERS (helpbar ((confirm helpbar_select))))
(events
   (error_message
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         ($token)
         {$this set_ok {localize $token}}
      )
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   (disband
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         ($error_reason)
         {do
            ($disband_error
               {switch $error_reason
                  (kLoneHeadToHead error_lone_h2h)
                  (kNoLeader error_no_leader)
                  (kKicked error_kicked)
                  (kAbandoned {band_ui get last_disband_error})
                  (kQuickplayMMNoLeader error_no_leader)
               }
            )
            #ifndef HX_OG
            {if
               {&&
                  {== $error_reason kLoneHeadToHead}
                  {platform_mgr is_connected}
                  {game is_playing}
               }
               {process_comeback_achievement TRUE}
               {gamecfg foreach_local_user $user
                  {achievements submit {$user get_user_num} ach_skill_versus_victory}
               }
               {if {gamemode get ranked}
                  {set $disband_error error_lone_h2h_win}
               }
            }
            #endif
            {$this set_ok {localize $disband_error}}
            {band_ui set last_disband_error $disband_error}
            {if {!= $error_reason kQuickplayMMNoLeader}
               {if_else
                  {&&
                     {gamecfg is_joining_allowed}
                     {gamemode get is_tour}
                     {{tour band} finalised}
                     {!= $error_reason kAbandoned}
                  }
                  {if_else
                     {'||'
                        {== {ui current_screen} tour_waiting_screen}
                        {== {ui current_screen} botb_news_feed_screen}
                        {== {ui transition_screen} tour_waiting_screen}
                        {== {ui transition_screen} botb_news_feed_screen}
                     }
                     {ui reset_screen meta_loading_uisink_default_screen}
                     {session disconnect TRUE}
                  }
                  {ui reset_screen meta_loading_uisink_default_screen}
               }
            }
         }
      )
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   (storage_changed
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {$this set_ok {localize error_storage_devices_changed}}
         {if_else {gamemode get is_tour_quickplay}
            {ui goto_screen meta_loading_uisink_default_screen}
            {ui goto_screen main_screen}
         }
      )
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   (data_error
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         ($corrupt $info_str)
         {$this set_ok
            {if_else $corrupt
               {sprintf {localize error_corrupt_song_data} $info_str}
               {localize error_lost_song_data}
            }
         }
         {if_else {!= {ui current_screen} post_songs_loading_screen}
            {ui reset_screen meta_loading_uisink_default_screen}
            {test_game_screen set bad_data_reset TRUE}
         }
      )
      (SELECT_DONE_MSG
         {do
            {test_game_screen set bad_data_reset FALSE}
            {band_ui dismiss_event}
         }
      )
   )
   (lost_connection
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         ($reason)
         {$this set_ok
            {localize
               {switch $reason
                  (kLostConnection error_lost_connection)
                  (kLostServer error_lost_server)
                  (kEthernetUnplugged error_ethernet_unplugged)
               }
            }
         }
         #ifdef HX_WII
         {if {== $reason kLostServer}
            {do
               ($result {platform_mgr last_dwc_error})
               {if {> $result 0}
                  {$this set_ok {get_dwc_error_string $result}}
               }
            }
         }
         #endif
         {handle (input_mgr session_busy)}
      )
      (SELECT_DONE_MSG
         {band_ui dismiss_event}
         {ui goto_screen meta_loading_uisink_lost_connection_screen}
      )
   )
   (botb_error
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init {$this set_ok {localize error_lost_server}})
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   (leaderboard_error
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init {$this set_ok {localize error_lost_leaderboards}})
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   (sign_out
      COMMON_ERROR_HANDLERS
      (allow_override FALSE)
      (init
         ($reason)
         {$this set_ok
            {localize
               {switch $reason
                  (kLocalUserSignedOut error_local_user_signed_out)
                  (kBandOwnerSignedOut error_band_owner_signed_out)
                  (kProfileOwnerSignedOut error_profile_owner_signed_out)
               }
            }
         }
         {ui reset_screen meta_loading_signout_screen}
      )
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   (disk_error
      COMMON_ERROR_HANDLERS
      #ifndef HX_WII
      (allow_override TRUE)
      #else
      (allow_override FALSE)
      #endif
      (init
         {$this set_ok {localize error_disk}}
         #ifdef HX_WII
         {if {exists song_sync_panel}
            {song_sync_panel disk_error TRUE}
         }
         #endif
      )
      (SELECT_DONE_MSG
         #ifdef HX_WII
         {if {exists song_sync_panel}
            {song_sync_panel disk_error FALSE}
         }
         #endif
         {band_ui dismiss_event}
      )
   )
   (invite_accepted
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         ($expired $pad_num)
         {if_else {! {modifier_mgr is_feature_enabled modifier_online_feature}}
            {do
               {band_ui dismiss_event}
               {passive_messages_panel queue_message
                  {localize error_cannot_accept_invite}
               }
            }
            {if_else $expired
               {do
                  {band_ui dismiss_event}
                  {passive_messages_panel queue_message {localize error_invite_expired}}
                  {accepting_invite_panel set is_expired TRUE}
                  {mm_accepting_invite_panel set is_expired TRUE}
               }
               {do
                  #ifndef HX_PS3
                     #ifndef HX_WII
                     {community_panel set invited_user_pad $pad_num}
                     #endif
                  #endif
                  {finding_panel set_joining_pads_from_session}
                  {band_ui hide_event}
               }
            }
         }
      )
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   (pad_lost
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         ($player_name $port $controller_sym)
         {input_mgr clear_control_request}
         {$this set_custom
            #ifndef HX_WII
            {if_else {== $controller_sym none}
               {sprintf {localize error_pad_lost_none} $player_name {'+' $port 1}}
               {sprintf
                  {localize error_pad_lost}
                  $player_name
                  {localize $controller_sym}
                  {'+' $port 1}
               }
            }
            #else
            {if_else {== $controller_sym none}
               {sprintf {localize error_pad_lost_none_wii} $player_name}
               {if_else {== $controller_sym vocals}
                  {sprintf {localize error_pad_lost_vocals_wii} $player_name}
                  {sprintf
                     {localize error_pad_lost_wii}
                     $player_name
                     {localize $controller_sym}
                  }
               }
            }
            #endif
            {localize continue}
            {localize error_return_to_main}
            opt1.btn
         }
      )
      (FOCUS_MSG DO_FOCUSCLICK kDataUnhandled)
      (SELECT_MSG
         {switch $component
            (opt2.btn
               {synth play button_back}
               {handle (ui on_controllers_quit)}
               #ifndef HX_OG
               {input_mgr reset}
               {band_ui dismiss_event}
               #else
               {input_mgr reset}
               {band_ui dismiss_event_no_pad_checks}
               #endif
               {if {&& {gamemode is_h2h_arrangement} {gamemode get online_play_required}}
                  {process_comeback_achievement FALSE}
               }
               {post_game_loading_panel load TRUE}
               {post_game_loading_panel set next_screen main_screen}
               {if_else {== {gamemode get game_mode} store}
                  {ui goto_screen store_unload_screen}
                  {do
                     {if_else
                        {'||'
                           {== {ui current_screen} {gamemode get game_screen}}
                           {== {ui current_screen} pause_controller_screen}
                        }
                        {ui pop_screen post_game_loading_screen}
                        {ui reset_screen post_game_loading_screen}
                     }
                  }
               }
            )
            (opt1.btn {synth play button_select})
         }
      )
      (SELECT_DONE_MSG
         {band_ui dismiss_event}
         {helpbar update_icons}
      )
      (input_limit_changed
         {unless {! {input_mgr check_controllers}}
            {band_ui dismiss_event}
            {helpbar update_icons}
         }
      )
   )
   (leave_rock_den_prompt
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {do
            {$this set_custom
               {localize leave_rock_den}
               {localize yes}
               {localize no}
               opt1.btn
            }
         }
      )
      (FOCUS_MSG DO_FOCUSCLICK kDataUnhandled)
      (SELECT_MSG
         {switch $component
            (opt1.btn
               {synth play button_select}
               {ui goto_screen meta_loading_changemembers_screen}
               {input_mgr clear_ui_leader}
               {fx fade_out}
               {band_ui dismiss_event}
               {garage_vehiclepanel set focus_on_enter "BandButton_01.btn"}
            )
            (opt2.btn
               {synth play button_back}
               {band_ui dismiss_event}
            )
         }
      )
   )
   (den_item_in_use
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {do
            {$this set_custom
               {localize item_in_use}
               {localize yes}
               {localize no}
               opt1.btn
            }
         }
      )
      (FOCUS_MSG DO_FOCUSCLICK kDataUnhandled)
      (SELECT_MSG
         {switch $component
            (opt1.btn
               {synth play button_select}
               {{{tour band} custom_den} move_item}
               {ui push_screen custom_den_colour_screen}
               {custom_den_colour_panel init}
               {band_ui dismiss_event}
            )
            (opt2.btn
               {synth play button_back}
               {band_ui dismiss_event}
            )
         }
      )
   )
   (vehicle_not_enough_studs
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {do
            {$this set_ok {localize ent_not_enough_studs}}
         }
      )
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   (denitem_not_enough_studs
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {do
            {$this set_ok {localize ent_not_enough_studs}}
         }
      )
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   (denitem_buy
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {do
            {$this set_yesno {localize buy_den_item} yes.btn}
         }
      )
      (SELECT_MSG
         {if_else {== $component yes.btn}
            {do
               {if_else {> {{{tour band} custom_den} get_current_cost} {{tour band} studs}}
                  {do
                     {band_ui dismiss_event}
                     {band_ui trigger_event denitem_not_enough_studs}
                  }
                  {do
                     {band_ui dismiss_event}
                     {{tour band} purchase_denitem
                        {{{tour band} custom_den} get_current_name}
                        {{{tour band} custom_den} get_current_cost}
                     }
                     {denitems_panel set_cost}
                     {update_tour_display}
                     {ui push_screen custom_den_colour_screen}
                     {custom_den_colour_panel init}
                  }
               }
            }
            {band_ui dismiss_event}
         }
      )
   )
   (denitem_noitems
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {do
            {$this set_ok {localize den_no_items_available}}
         }
      )
      (SELECT_MSG {band_ui dismiss_event})
   )
   (vehicle_check_purchase
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {do
            {$this set_yesno {{tour band} format_vehicle_cost} yes.btn}
         }
      )
      (SELECT_MSG
         {if_else {== $component yes.btn}
            {do
               {{tour band} confirm_purchase_vehicle}
               {update_tour_display}
            }
            {do
               {{tour band} clear_purchase_vehicle}
            }
         }
      )
      (SELECT_DONE_MSG
         {band_ui dismiss_event}
         {if {== $component yes.btn}
            {switch {garage_vehiclepanel get_focus}
               (BandButton_01.btn
                  {campervan_purchased_vehicle_panel set purchasing TRUE}
                  {ui push_screen campervan_purchased_screen}
               )
               (BandButton_02.btn
                  {minibus_purchased_vehicle_panel set purchasing TRUE}
                  {ui push_screen minibus_purchased_screen}
               )
               (BandButton_03.btn
                  {boat_purchased_vehicle_panel set purchasing TRUE}
                  {ui push_screen boat_purchased_screen}
               )
               (BandButton_04.btn
                  {helicopter_purchased_vehicle_panel set purchasing TRUE}
                  {ui push_screen helicopter_purchased_screen}
               )
               (BandButton_05.btn
                  {tourbus_purchased_vehicle_panel set purchasing TRUE}
                  {ui push_screen tourbus_purchased_screen}
               )
               (BandButton_06.btn
                  {hovercraft_purchased_vehicle_panel set purchasing TRUE}
                  {ui push_screen hovercraft_purchased_screen}
               )
               (BandButton_07.btn
                  {submarine_purchased_vehicle_panel set purchasing TRUE}
                  {ui push_screen submarine_purchased_screen}
               )
               (BandButton_08.btn
                  {jet_purchased_vehicle_panel set purchasing TRUE}
                  {ui push_screen jet_purchased_screen}
               )
               (BandButton_09.btn
                  {teleporter_purchased_vehicle_panel set purchasing TRUE}
                  {ui push_screen teleporter_purchased_screen}
               )
            }
            {synth play buy_vehicle.cue}
         }
      )
   )
   (manager_not_hired
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {do
            {$this set_ok {localize manager_not_hired}}
         }
      )
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   //
   DC
   -
   modified
   this
   to
   stop
   a
   hang
   bug
   #ifdef HX_OG
   (mic_lost
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {do
            {$this set_custom
               {localize mics_changed_desc}
               {localize continue}
               {localize error_return_to_main}
               opt1.btn
            }
         }
      )
      (SELECT_MSG)
      (SELECT_DONE_MSG
         {switch $component
            (opt1.btn
               {synth play button_select}
               {band_ui dismiss_event}
            )
            (opt2.btn
               {input_mgr reset}
               {synth play button_cancel}
               {post_game_loading_panel load TRUE}
               {post_game_loading_panel set next_screen main_screen}
               {ui reset_screen post_game_loading_screen}
            )
         }
      )
   )
   #endif
   (saveload_pad_lost
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         ($player_name $port $controller_sym)
         {$this set_custom
            #ifndef HX_WII
            {if_else {== $controller_sym none}
               {sprintf
                  {localize error_saveload_pad_lost_none}
                  $player_name
                  {'+' $port 1}
               }
               {sprintf
                  {localize error_saveload_pad_lost}
                  $player_name
                  {localize $controller_sym}
                  {'+' $port 1}
               }
            }
            #else
            {if_else {== $controller_sym none}
               {sprintf {localize error_saveload_pad_lost_none_wii} $player_name}
               {if_else {== $controler_sym vocals}
                  {sprintf {localize error_saveload_pad_lost_vocals_wii} $player_name}
                  {sprintf
                     {localize error_saveload_pad_lost_wii}
                     $player_name
                     {localize $controller_sym}
                  }
               }
            }
            #endif
            {localize continue}
            {localize error_return_to_main}
            opt1.btn
         }
      )
      (SELECT_DONE_MSG
         {band_ui dismiss_event}
         {helpbar update_icons}
         {switch $component
            (opt1.btn
               {synth play button_select}
               {save_screen on_pad_lost_dismissed}
            )
            (opt2.btn
               {synth play button_back}
               {ui reset_screen main_screen}
            )
         }
      )
   )
   (matchmaking_pad_lost
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         ($player_name $port $controller_sym)
         {$this set_custom
            #ifndef HX_WII
            {if_else {== $controller_sym none}
               {sprintf
                  {localize error_matchmaking_pad_lost_none}
                  $player_name
                  {'+' $port 1}
               }
               {sprintf
                  {localize error_matchmaking_pad_lost}
                  $player_name
                  {localize $controller_sym}
                  {'+' $port 1}
               }
            }
            #else
            {if_else {== $controller_sym none}
               {sprintf {localize error_matchmaking_pad_lost_none_wii} $player_name}
               {if_else {== $controller_sym vocals}
                  {sprintf {localize error_matchmaking_pad_lost_vocals_wii} $player_name}
                  {sprintf
                     {localize error_matchmaking_pad_lost_wii}
                     $player_name
                     {localize $controller_sym}
                  }
               }
            }
            #endif
            {localize continue}
            {localize error_abandon_session}
            opt1.btn
         }
      )
      (SELECT_DONE_MSG
         {band_ui dismiss_event}
         {helpbar update_icons}
         {if {== $component opt2.btn}
            {matchmaking_screen abandon_session}
         }
      )
   )
   (remote_exit
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (enter {synth play button_back})
      (init {$this set_yesno {localize error_confirm_remote_exit} no.btn})
      (SELECT_MSG)
      (SELECT_DONE_MSG {band_ui dismiss_event})
      (input_limit_changed
         {unless {input_mgr allow_remote_exit}
            {band_ui dismiss_event}
         }
      )
   )
   (take_control
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {do
            {$this set_custom
               {localize take_control_prompt}
               {localize yes}
               {localize no}
               opt1.btn
            }
         }
      )
      (SELECT_DONE_MSG
         {if_else {&& {! {gamemode get play_a_show}} {== $component opt1.btn}}
            {do
               {input_mgr set_ui_leader {input_mgr control_request}}
               {input_mgr clear_control_request}
               {ui push_screen has_control_screen}
               {band_ui dismiss_event}
            }
            {do
               {input_mgr clear_control_request}
               {band_ui dismiss_event}
            }
         }
      )
   )
   (already_leader
      COMMON_ERROR_HANDLERS
      (allow_override TRUE)
      (init
         {do
            {$this set_ok {localize already_leader_prompt}}
         }
      )
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   (store_load_failed
      COMMON_ERROR_HANDLERS
      (allow_override FALSE)
      (init
         ($error)
         {$this set_ok
            {localize
               {switch $error
                  (kStoreErrorNoContent store_error_no_content)
                  #ifdef HX_WII
                  (kStoreErrorCacheNoSpace store_cfgneedblocks)
                  (kStoreErrorCacheRemoved store_cfgneedindoes)
                  (kStoreErrorEcommerce store_genericerror)
                  (kStoreErrorNoEula store_noeula)
                  #else
                  (kStoreErrorCacheNoSpace store_error_cache_no_space)
                  (kStoreErrorCacheRemoved store_error_cache_removed)
                  #endif
                  (kStoreErrorLiveServer store_error_live_server)
                  (kStoreErrorStoreServer store_error_store_server)
                  (kStoreErrorSignedOut store_error_signed_out)
               }
            }
         }
         #ifdef HX_WII
         {if {== $error kStoreErrorEcommerce}
            {$this set_ok
               {sprintf {localize store_genericerror} {platform_mgr commerce_error_code}}
            }
         }
         #endif
         {if_else
            {'||'
               {== {ui current_screen} store_loading_screen}
               {== {ui current_screen} real_store_loading_screen}
            }
            {store_real_loading_screen set store_all_wrong TRUE}
            {ui reset_screen meta_loading_uisink_default_screen}
         }
      )
      (SELECT_DONE_MSG
         {store_real_loading_screen set store_all_wrong FALSE}
         {band_ui dismiss_event}
      )
   )
   #ifdef HX_WII
   (wii_dlc_failed
      COMMON_ERROR_HANDLERS
      (allow_override FALSE)
      (init
         ($data)
         {do
            ($error {content_mgr get_last_result})
            {switch $error
               (kFailNoSDCard {$this set_ok {localize dlc_backup_nosdcard}})
               (kRestoreCorrupt
                  {$this set_ok {sprintf {localize dlc_restore_corrupt} $data}}
               )
               (kRestoreOutOfDate
                  {$this set_ok
                     {sprintf {localize dlc_restore_outofdate} $data $data}
                  }
               )
               (kRestoreNoLicense
                  {$this set_ok
                     {sprintf {localize dlc_restore_nolicense} $data $data}
                  }
               )
               (kFailSDIncompatible {$this set_ok {localize dlc_restore_incompatible}})
               (kDLCFailed {$this set_ok {sprintf {localize dlc_restore_failed} $data}})
            }
         }
      )
      (SELECT_DONE_MSG {band_ui dismiss_event})
   )
   #endif
   (confirm_seldiff_quit
      COMMON_ERROR_HANDLERS
      (allow_override FALSE)
      (init
         {do
            {$this set_custom
               {localize confirm_quit}
               {localize no}
               {localize yes}
               opt1.btn
            }
         }
      )
      (SELECT_DONE_MSG
         {if {!= $component opt1.btn}
            {ui goto_screen play_a_show_screen}
         }
         {band_ui dismiss_event}
      )
   )
)