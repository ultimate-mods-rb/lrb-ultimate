#define TRACK_END_FRAME (1920)
#define TRACK_PANEL_HANDLERS (
   (enter
      {foreach $obj {draw_order.grp get_array objects}
         {if {$obj is_a BandLabel}
            {draw_order.grp remove_object $obj}
         }
      }
      {game add_sink $this}
      {with {$this loaded_dir}
         {do
            ($hwss
               {if_else {== $hwlength 1.0}
                  1.0
                  {if_else {> $hwlength 2.0}
                     {/ $hwlength 1.4}
                     {if_else {> $hwlength 1.0}
                        {/ $hwlength {+ {* 0.4 $hwlength} 0.6}}
                        {* $hwlength {+ {* -1.5 $hwlength} 2.5}}
                     }
                  }
               }
            )
            {set [view_time_easy] 
               {* {* {/ {if_else $syncdifspeeds 1.2 2.4} $hwss} $trackspeed} $speedmod}
            }
            {set [view_time_expert] 
               {* {* {/ 1.2 $trackspeed} $hwss} $speedmod}
            }
         }
      }
      {$this set_showing
         {if_else
            {'||'
               $skip_intro
               {gamemode get is_drum_trainer}
               {gamemode get is_practice}
            }
            {gamemode get show_track}
            FALSE
         }
      }
   )
   (exit {game remove_sink $this})
   (unison_hit)
   (unison_miss)
   (set_track_out)
   (set_track_in)
   (animate_track ($start $end $period $units))
   (animate_track_out)
   (animate_track_out_fast)
   (animate_track_in_fast)
   (finish_load
      {if {!= $gems lrb} {do
         ($gems_dir {new RndDir gems_dir})
         {switch $gems
            #include ../ulti/track/gems/gems_scripting.dta
         }
      }}
      {$this set_showing FALSE}
      {$this set_track_out}
   )
   (intro_start
      {$this reset}
      {$this set_showing {gamemode get show_track}}
      {$this set_track_in}
   )
   (intro_skip
      {$this reset}
      {$this set_showing {gamemode get show_track}}
      {$this set_track_out}
      {$this play_intro}
   )
   (on_reset
      {beatmatch foreach_active_player $m
         {$m on_new_track}
         {{$m track} init {$m track}}
      }
      {{$this loaded_dir} reset}
   )
   (on_extend
      {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
         {do
            ($obj {sprint {$player instrument} "_track_callback"})
            {if {exists $obj} {delete $obj}}
            {new Object $obj}
            {$obj set_type track_callback}
            {$obj init $player}
         }
         {unless {|| {! $countdown} {gamemode get is_practice} {gamemode get is_drum_trainer} {challenge_mgr has_challenge}}
            {do
               ($obj {sprint {$player instrument} "_countdown"})
               ($dir
                  {sprint "endgame_feedback_"
                     {if_else {== {$player instrument} vocals}
                        vox
                        {do
                           ($str {sprint {{$player instrument} get player_feedback}})
                           {sprint 0 {str_elem $str {- {strlen $str} 1}}}
                        }
                     }
                  }
               )
               {if {exists $obj} {delete $obj}}
               {new Object $obj}
               {$obj set_type countdown}
               {$obj init
                  {$player instrument}
                  {$dir find end_game_drum.lbl}
                  {$dir find end_game_drum.tnm}
               }
            }
         }
      }
      {$this play_intro}
      {if {&& {exists gamemode} {gamemode get play_track_intro_sfx}}
         {synth play track_beg.cue}
      }
      {if_else {== {gamemode in_mode} practice}
         {do
            {unless {> {gamecfg get practice_speed} 0}
               {beatmatch set_music_speed $speedmod}
            }
            {if {> {gamecfg get practice_speed} 0}
               {beatmatch set_music_speed $modifier}
            }
         }
         {beatmatch set_music_speed $speedmod}
      }
   )
)
{new TrackPanel
   coop_track_panel
   (file ../track/trackpanel.milo)
   TRACK_PANEL_HANDLERS
}
{new TrackPanel
   h2h_track_panel
   (file
      {if_else {== {{game get_participant_config 0} get_track_sym} vocals}
         ../track/trackpanel_h2h_vocals.milo
         ../track/trackpanel_h2h.milo
      }
   )
   TRACK_PANEL_HANDLERS
}
{func get_track_panel
   {gamemode get track_panel}
}
{set $playback_file ""}