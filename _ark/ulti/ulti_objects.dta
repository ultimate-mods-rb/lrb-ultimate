(Object
   (types
      (countdown
         (active FALSE)
         (done FALSE)
         (current_event 0)
         (total_events 0)
         (remaining 0)
         (event_array 0)
         (target 0)
         (track 0)
         (anim 0)
         (init
            ($track $target $anim)
            {set [track] {coop_track_panel find $track}}
            {set [target] $target}
            {set [anim] $anim}
            {$this set_lbl " "}
            {{coop_track_panel find draw_order.grp} add_object [target]}
            {unless {== [track] vocals} {[target] set_local_pos 0 0 -335}}
            {set [event_array] {{sprint $this "_mp"} get event_array}}
            {do
               ($pos {{sprint $this "_mp"} get final_note_pos})
               ($len {- {end_of_song get end} $pos})
               {if {>= $len 20}
                  {push_back [event_array] {array ($pos {int {- $len 4}})}}
               }
            }
            {set [total_events] {max 0 {- {size [event_array]} 1}}}
         )
         (set_lbl
            ($text)
            {[target] set_localized {sprint $text}}
         )
         (downbeat
            {if {&& {size [event_array]} {! [done]}}
               {if
                  {&&
                     {! [active]}
                     {>= {taskmgr beat} {elem {elem [event_array] [current_event]} 0}}
                  }
                  {set [remaining] {int {/ {elem {elem [event_array] [current_event]} 1} 4}}}
                  {set [active] TRUE}
                  {{[track] find retract.trig} trigger}
               }
               {if [active]
                  {-- [remaining]}
                  {if_else [remaining]
                     {do
                        {$this set_lbl [remaining]}
                        {[anim] animate (range 2.5 8)}
                     }
                     {do
                        {$this set_lbl " "}
                        {set [active] FALSE}
                        {if_else {== {[track] name} vocals}
                           {{[track] find play_intro.trig} trigger}
                           {{[track] find intro.trig} trigger}
                        }
                        {if_else {== [current_event] [total_events]}
                           {set [done] TRUE}
                           {++ [current_event]}
                        }
                     }
                  }
               }
            }
         )
      )
      (track_callback
         (init
            ($player)
            {set [player] $player}
            {[player] add_sink $this (hit miss pass phrase_rating)}
            {set [track] {coop_track_panel find {$player instrument}}}
            {if $fcring
               {with {[track] get streak_meter}
                  {unless {exists fake.trig}
                     {{new EventTrigger show_ring.trig} copy star_deploy.trig 0}
                     {{new EventTrigger hide_ring.trig} copy star_deploy_stop.trig 0}

                     {new EventTrigger fake.trig}
                     {star_deploy.trig copy fake.trig 0}
                     {star_deploy_stop.trig copy fake.trig 0}
                  }
                  {show_ring.trig trigger}
               }
            }
         )
         (hit
            {++ [gems_hit]}
            {++ [gems_combo]}
            {if {&& {! {|| $legacybass {== [track] bass}}} {> [gems_combo] 29} {! [groove_active]}}
               {set [groove_active] TRUE}
               {{[track] find BassSuperStreak_ON.trig} trigger}
            }
         )
         (miss
            {++ [gems_miss]}
            {set [gems_combo] 0}
            {$this on_miss}
         )
         (pass
            {unless {[player] current_streak}
               {++ [gems_pass]}
               {set [gems_combo] 0}
               {$this on_miss}
            }
         )
         (phrase_rating
            ($rating)
            {if_else {== $rating 4}
               {do
                  {++ [gems_hit]}
                  {++ [gems_combo]}
               }
               {do
                  {++ [gems_miss]}
                  {set [gems_combo] 0}
                  {$this on_miss}
               }
            }
         )
         (on_miss
            {if $fcring
               {{{[track] get streak_meter} find hide_ring.trig} trigger}
            }
            {if [groove_active]
               {set [groove_active] FALSE}
               {{[track] find BassSuperStreak_OFF.trig} trigger}
            }
         )
         (gems_hit 0)
         (gems_combo 0)
         (gems_miss 0)
         (gems_pass 0)
         (groove_active FALSE)
         (player 0)
         (track 0)
      )
   )
)