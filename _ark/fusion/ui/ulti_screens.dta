{new UIPanel
   bonus_menupanel
   (file "quickplay/quickplay_venue.milo")
   (selection_memory 0)
   (enter
      {do
         {choosevenue.lbl set text_token "bonus"}
         {delete Venue_BG_BG.mesh}
         {delete Venue_BG_Border.mesh}
         {set $band_sel_mode 0}
         {venue.lst set_data
            (theatre
               play_a_show
               cutsceneviewer
               framerate
               #ifdef HX_NG
               musicstore
               #endif
            )
         }
         {$this set_focus venue.lst}
         {venue.lst set_selected [selection_memory]}
      }
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {synth play button_back}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {do
         ($selected {venue.lst selected_sym})
         {$this exec_sel $selected}
      }
   )
   (SCROLL_MSG
      {synth play button_focus}
      {$this set selection_memory {venue.lst selected_pos}}
   )
   (exec_sel
      ($bonus_sel)
      {synth play button_select}
      {switch $bonus_sel
         (theatre
            {if_else {gamecfg is_missing_mic $player_num FALSE}
               {do
                  #ifdef KIOSK_DEMO
                  {vocalist_must_have_mic_screen set message demo_solo_vocalist_needs_mic}
                  #else
                  {vocalist_must_have_mic_screen set message solo_vocalist_needs_mic}
                  #endif
                  {ui push_screen vocalist_must_have_mic_screen}
               }
               {if_else {{profile_mgr get_profile $player_num} num_bands}
                  {do
                     {set $band_sel_mode 1}
                     {gamemode set_mode theatre $player_num}
                     {ui goto_screen tour_band_sel_screen}
                     {fx fade_out}
                  }
                  {do
                     {gamemode set_mode theatre $player_num}
                     {ui goto_screen {gamemode get matchmaking_screen}}
                     {fx fade_out}
                  }
               }
            }
         )
         (cutsceneviewer
            {if_else {{profile_mgr get_profile $player_num} num_bands}
               {do
                  {set $band_sel_mode 2}
                  {gamemode set_mode tour_local $player_num}
                  {ui goto_screen tour_band_sel_screen}
               }
               {ui goto_screen cutscene_menuscreen}
            }
         )
         (framerate {ui goto_screen frame_rate_screen})
         (play_a_show
            {gamemode set_mode play_a_show}
            {ui goto_screen {gamemode get matchmaking_screen}}
         )
         (musicstore
            {do
               #ifdef HX_XBOX
               {input_mgr set_user {user_mgr get_band_user $player_num}}
               {gamemode set_mode store}
               {if_else
                  {'||'
                     {! {platform_mgr is_player_signed_into_live $player_num}}
                     {platform_mgr is_player_a_guest $player_num}
                  }
                  {ui push_screen main_store_signin_screen}
                  {ui push_screen main_store_find_cache_screen}
               }
               #endif
               #ifdef HX_PS3
               {gamemode set_mode store}
               {ui goto_screen store_enter_network_screen}
               #endif
               #ifdef HX_WII
               {ui goto_screen store_loading_screen}
               {force_goto_else_after_network_connect store_wii_enter_screen
                  main_screen
                  TRUE
               }
               #endif
               #ifdef HX_PC
               {ui goto_screen store_loading_screen}
               #endif
               {fx fade_out}
               {input_mgr set_user {user_mgr get_band_user $player_num}}
            }
         )
      }
   )
}
{new MainScreen
   bonus_menuscreen
   (back main_screen)
   (panels meta movie_panel bonus_menupanel tour_lower3rd_panel)
   (focus bonus_menupanel)
   (helpbar
      (
         (cancel helpbar_back)
         (confirm helpbar_confirm)
      )
   )
}
{new UIPanel
   cutscene_menupanel
   (file "quickplay/quickplay_venue.milo")
   (selection_memory 0)
   (enter
      {do
         {choosevenue.lbl set text_token "cutsceneviewer"}
         {delete Venue_BG_BG.mesh}
         {delete Venue_BG_Border.mesh}
         {venue.lst set_data
            (hotel_smash_up
               alien_abduction_02
               ;audition_1_guitar ;milo is 50 mb good luck
               #ifdef HX_WII
               audition_2_vocal ;loads on dolphin with extended memory
               #endif
               audition_3_drum
               audition_4_bass
               audition_testing
               #ifdef HX_WII
               alien_signing_screen_2
               alien_signing_screen_3
               #endif
               asteroid-23439
               backup_demolition_intro
               mj_dinochase
               icebreakerintro_alex_v01
               mtv_ad
               octopusattack_jo
               octopusattack_mj_latest_pass
               octopusattack_mj_latest_pass_2
               oval_race
               destruction_derby
               #ifdef HX_WII
               queen
               #endif
               story_outro_ip
               ;vanilla
               auditions
               demolition_intro
               shock_band
               rocktopus
               castle
               rock_the_crop
               alien_abduction
               dino_chase
               rock_lobster
               rock_the_boat
               paranoia_and_the_pig
               alien_signing
               ufo_breakdown
               moon_set_up
               stop_the_rock
               story_outro
            )
         }
         {$this set_focus venue.lst}
         {venue.lst set_selected [selection_memory]}
      }
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {synth play button_back}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {do
         {set $fake_cut_enter TRUE}
         {cutscene set_current_cutscene {venue.lst selected_sym}}
         {cutscene set replay 1}
         {$this setup_users}
         {if {== {cutscene get_current_cutscene} auditions}
            {cutscene set_required_driver
               {switch {$player get_track_type}
                  (kTrackGuitar guitar.cutdrv)
                  (kTrackDrum drum.cutdrv)
                  (kTrackVocals vocal.cutdrv)
                  (kTrackBass bass.cutdrv)
                  guitar.cutdrv
               }
               guitar.cutdrv
            }
         }
         {synth play button_select}
         {ui goto_screen cutscene_loading_screen_1}
      }
   )
   (SCROLL_MSG
      {synth play button_focus}
      {$this set selection_memory {venue.lst selected_pos}}
   )
}
{new MainScreen
   cutscene_menuscreen
   (back bonus_menuscreen)
   (panels meta movie_panel cutscene_menupanel tour_lower3rd_panel)
   (focus cutscene_menupanel)
   (helpbar
      (
         (cancel helpbar_back)
         (confirm helpbar_confirm)
      )
   )
}
{new BandScreen
   cant_create_band_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (message cant_create_band)
   (helpbar ((confirm helpbar_select)))
   (enter {dialog_panel set_ok {localize [message]}})
   (SELECT_MSG {ui pop_screen})
}
{new UIPanel
   play_a_show_panel
   (file "play_a_show.milo")
   ;(focus Career_Stats.lst)
   (filters
      (
         song_and_artist
         artist
         gender
         genre
         ;length
         ;tempo
         year
      )
   )
   (played_songs)
   (songs)
   (options)
   (current_set)
   (current_filters)
   (enter
      {print "play a show panel enter\n"}
      ;move any stuff like this to the objects before merging
      {songs.lst set_local_pos 90.00 0.00 97.53}
      {subtitle.btn set_local_pos -74.62 -4.86 172.76}
      {icons.lst set_local_pos -440.00 0.00 97.53}
      {icons.lst set_data
         (
            "GD"
            "B"
            ""
            ""
            "V"
         )
      }
      {buttons.lst set_local_pos -395.00 0.00 97.53}
      {buttons.lst set_data
         (
            "gA"
            "rB"
            "yY"
            "bX"
            "yR"
         )
      }
      {set [played_songs] {array 0}}
      {set [current_set] {array 0}}
      {$this do_stuff}
   )
   (exit
      {set [current_set] {array 0}}
   )
   (do_stuff
      {print "resetting arrays\n"}
      {set [songs] {array 0}}
      {set [options] {array 0}}
      {set [current_filters] {array 0}}
      {print "doing song stuff\n"}
      {do
         ($array {array 0})
         ; this will lock up the game if it runs out of songs. fix at some point. maybe if it fails like 100 times?
         {while {!= {size $array} 4} {do
            ($song {random_int 0 {song_offer_provider num_data}})
            ($song_sym {song_offer_provider data_symbol $song})
            {unless
               {||
                  {find_elem [played_songs] $song_sym}
                  {find_elem $array $song}
                  {! {song_offer_provider is_song $song}}
                  {song_mgr has_missing_parts $song_sym {gamemode get missing_part_type}}
               }
               {push_back $array $song}
            }
         }}
         {set [songs] $array}
      }
      {print "song stuff done\n"}
      {print "doing filter stuff\n"}
      {while {!= {size [current_filters]} 4} {do
         ($filter {random_elem [filters]})
         {unless {find_elem [current_filters] $filter}
            {push_back [current_filters] $filter}
         }
      }}
      {print "filter stuff done\n"}
      {print "doing hacky option stuff\n"}
      {foreach_int $elem 0 4 {do
         ($offer {song_offer_provider get_song_offer {elem [songs] $elem}})
         {push_back [options]
            {switch {elem [current_filters] $elem}
               (song_and_artist
                  {sprintf {localize vote_song_and_artist_fmt} {$offer get_data (name)} {$offer artist}}
               )
               (artist
                  {sprintf {localize vote_obfuscate_song_by_artist_fmt} {$offer artist}}
               )
               (gender
                  {sprintf {localize vote_obfuscate_song_by_gender_fmt} {$offer get_data (vocal_gender)}}
               )
               (genre
                  {sprintf {localize vote_obfuscate_song_by_genre_fmt} {localize {$offer get_data (genre)}}}
               )
               (year
                  {sprintf {localize vote_obfuscate_song_by_year_fmt}
                     {if_else {$offer has_data year_released}
                        {$offer get_data (year_released)}
                        1969
                     }
                  }
               )
               {fail {elem [current_filters] $elem} " isn't a valid filter\n"}
            }
         }
      }}
      {print "hacky option stuff done\n"}

      {push_back [options] moreinfo}
      {songs.lst set_data [options]}
   )
   (add_song
      ($elem)
      {push_back [current_set] {song_offer_provider data_symbol {elem [songs] $elem}}}
      {print_array [current_set]}
      {do
         ($offer {song_offer_provider get_song_offer {elem [songs] $elem}})
         {cheat_display show {sprint "added " {$offer get_data (name)} " by " {$offer artist} " to setlist :3"}}
      }
      {$this do_stuff}
   )
   (BUTTON_DOWN_MSG
      {cond
         ({player_on_instrument $player_num kControllerGuitar}
            {switch $action
               (kAction_Confirm {$this add_song 0})
               (kAction_Cancel {$this add_song 1})
               (kAction_Option {$this do_stuff})
               {switch $raw_button
                  (kPad_Tri {$this add_song 2})
                  (kPad_Square {$this add_song 3})
               }
            }
         )
         ({player_on_instrument $player_num kControllerDrum}
            {switch $raw_button
               (kPad_X {$this add_song 0})
               (kPad_Circle {$this add_song 1})
               (kPad_Tri {$this add_song 2})
               (kPad_Square {$this add_song 3})
               (kPad_R1 {$this do_stuff})
            }
         )
         ({player_on_instrument $player_num kControllerVocals}
            {switch $action
               (kAction_Confirm {$this add_song 0})
               (kAction_Cancel {$this add_song 1})
               (kAction_Option {$this do_stuff})
               {switch $raw_button
                  (kPad_Tri {$this add_song 2})
                  (kPad_Square {$this add_song 3})
               }
            }
         )
      }
      {switch $action
         (kAction_Start
            {if_else {size [current_set]}
               {do
                  {game set_venue big_club/SkeletonBattle/skeleton_battle.milo}
                  {meta_performer set_songs [current_set]}
                  {song_select_panel move_on}
               }
               {synth play button_error}
            }
         )
         (kAction_ViewModify {ui goto_screen matchmaking_screen})
      }
   )
}
{new BandScreen
   play_a_show_screen
   (panels
      meta
      #ifndef HX_EE
      song_sync_panel
      #endif
      postsong_sfx_panel
      movie_panel
      song_select_details_panel
      song_select_panel
      song_select_lower3rd_panel
      play_a_show_panel
   )
   (focus play_a_show_panel)
   (helpbar
      (
         (state_confirm helpbar_play_setlist)
         (view_modify option_exit)
      )
   )
   (unused_panels
      (
         song_sync_panel
         postsong_sfx_panel
         movie_panel
         song_select_details_panel
         song_select_panel
         song_select_lower3rd_panel
      )
   )
   (enter
      {foreach $panel [unused_panels]
         {$panel set_showing FALSE}
      }
   )
   (exit
      {foreach $panel [unused_panels]
         {$panel set_showing TRUE}
      }
      {reset_random_selection}
   )
}