#define OVERSHELL_LIST_FILE (
   (file overshell.milo)
   (focus OS_LIST)
)
#define OVERSHELL_SAVE_POS (
   (pos 0)
   (SCROLL_MSG {set [pos] {OS_LIST selected_pos}})
)
{func pop_and_goto_screen
   ($gotoscreen)
   {ui pop_screen}
   {ui goto_screen $gotoscreen}
}
{new UIPanel
   overshell_main_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_ultisettings)
   (data (
      (os_mod
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_modifier_screen})
      )
      (os_spd
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_speed_screen})
      )
      (os_vis
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_visual_screen})
      )
      (os_trk
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_trk_screen})
      )
      (os_gfx
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_graphics_screen})
      )
      (os_cnt
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_cnt_screen})
      )
   ))
   (enter
      {os_setup_common}
      {os_fix_pos}
      {set $overshell_up TRUE}
   )
   (SELECT_MSG {os_sel_common})
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {if {mod_settings_rw save_settings}
            {passive_messages_panel queue_message {localize no_bands}}
         }
         {os_clear_pos}
         {ui pop_screen}
         {set $overshell_up FALSE}
      }
      kDataUnhandled
   )
}
{new UIScreen
   overshell_main_screen
   (panels overshell_main_panel practice_lower3rd_panel)
   (focus overshell_main_panel)
}
{new UIPanel
   overshell_modifier_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_mod)
   (data (
      (mod_autokick
         (type uOnOFF)
         (bool {modifier_mgr is_modifier_active mod_autokick})
         (sel_script {modifier_mgr toggle_modifier_active mod_autokick})
      )
      (mod_doublespeed
         (type uOnOFF)
         (bool {modifier_mgr is_modifier_active mod_doublespeed})
         (sel_script {modifier_mgr toggle_modifier_active mod_doublespeed})
      )
      (os_syncdifspeeds
         (type uOnOFF)
         (bool $syncdifspeeds)
         (sel_script {toggle_var syncdifspeeds})
      )
      (os_whammypb
         (type uOnOFF)
         (bool $whammypb)
         (sel_script {toggle_var whammypb})
      )
      (os_trkmuting
         (type uOnOFF)
         (bool $trkmuting)
         (sel_script {toggle_var trkmuting})
      )
      (os_misssounds
         (type uOnOFF)
         (bool $misssounds)
         (sel_script {toggle_var misssounds})
      )
   ))
   (enter {os_setup_common})
   (exit {os_clear_pos})
   (SELECT_MSG
      {os_sel_common}
      {os_fix_pos}
   )
}
{new UIScreen
   overshell_modifier_screen
   (back overshell_main_screen)
   (panels overshell_modifier_panel practice_lower3rd_panel)
   (focus overshell_modifier_panel)
}
{new UIPanel
   overshell_visual_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_vis)
   (data (
      (mod_nohud
         (type uOnOFF)
         (bool {modifier_mgr is_modifier_active mod_nohud})
         (sel_script {modifier_mgr toggle_modifier_active mod_nohud})
      )
      (os_songtitle
         (type uOnOFF)
         (bool $songtitle)
         (sel_script {toggle_var songtitle})
      )
      (os_legacybass
         (type uOnOFF)
         (bool $legacybass)
         (sel_script {toggle_var legacybass})
      )
      (os_colorshuffle
         (type uOnOFF)
         (bool $colorshuffle)
         (sel_script {toggle_var colorshuffle})
      )
      (os_fcring
         (type uOnOFF)
         (bool $fcring)
         (sel_script {toggle_var fcring})
      )
      (os_countdown
         (type uOnOFF)
         (bool $countdown)
         (sel_script {toggle_var countdown})
      )
      (os_videobgs
         (type uOnOFF)
         (bool $video_bgs)
         (sel_script {toggle_var video_bgs})
      )
   ))
   (enter {os_setup_common})
   (exit {os_clear_pos})
   (SELECT_MSG
      {os_sel_common}
      {os_fix_pos}
   )
}
{new UIScreen
   overshell_visual_screen
   (back overshell_main_screen)
   (panels overshell_visual_panel practice_lower3rd_panel)
   (focus overshell_visual_panel)
}
{new UIPanel
   overshell_graphics_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_gfx)
   (data (
      #ifndef HX_WII
      (os_venuefps
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_venuefps_screen})
      )
      (os_vsync
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_vsync_screen})
      )
      #endif
      (os_blackbg
         (type uOnOFF)
         (bool $blackbg)
         (sel_script {toggle_var blackbg})
      )
      (os_fxdof
         (type uOnOFF)
         (bool $fxdof)
         (sel_script {toggle_var fxdof})
      )
      (os_scrnoise
         (type uOnOFF)
         (bool $scrnoise)
         (sel_script {toggle_var scrnoise})
      )
      (os_scrbloom
         (type uOnOFF)
         (bool $scrbloom)
         (sel_script {toggle_var scrbloom})
      )
      (os_camerashake
         (type uOnOFF)
         (bool $camerashake)
         (sel_script {toggle_var camerashake})
      )
      #ifndef HX_WII
      (os_mbblend
         (type uOnOFF)
         (bool $mbblend)
         (sel_script {toggle_var mbblend})
      )
      #endif
   ))
   (enter
      {os_setup_common}
      {os_fix_pos}
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {os_clear_pos}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {os_sel_common}
      {os_fix_pos}
   )
}
{new UIScreen
   overshell_graphics_screen
   (back overshell_main_screen)
   (panels overshell_graphics_panel practice_lower3rd_panel)
   (focus overshell_graphics_panel)
}
{new UIPanel
   overshell_vsync_panel
   OVERSHELL_LIST_FILE
   (title os_vsync)
   (data (infinite full half quarter))
   (enter {os_setup_common})
   (SELECT_MSG
      {set $vsyncrate
         {switch {$component selected_sym}
            (infinite 0)
            (full 1)
            (half 2)
            (quarter 4)
         }
      }
      {rnd set_sync $vsyncrate}
      {pop_and_goto_screen overshell_graphics_screen}
   )
}
{new UIScreen
   overshell_vsync_screen
   (back overshell_graphics_screen)
   (panels overshell_vsync_panel practice_lower3rd_panel)
   (focus overshell_vsync_panel)
}
{new UIPanel
   overshell_venuefps_panel
   OVERSHELL_LIST_FILE
   (title os_venuefps)
   (data (60fps 30fps 24fps 15fps 12fps 6fps 1fps))
   (enter {os_setup_common})
   (SELECT_MSG
      {set $emulatefps 
         {switch {$component selected_sym}
            (60fps 60)
            (30fps 30)
            (24fps 24)
            (15fps 15)
            (12fps 12)
            (6fps 6)
            (1fps 1)
         }
      }
      {pop_and_goto_screen overshell_graphics_screen}
   )
}
{new UIScreen
   overshell_venuefps_screen
   (back overshell_graphics_screen)
   (panels overshell_venuefps_panel practice_lower3rd_panel)
   (focus overshell_venuefps_panel)
}
{new UIPanel
   overshell_cnt_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_cnt)
   (data (
      (os_remap_cnt
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_remap_cnt_screen})
      )
      #ifndef HX_WII
      (os_cnt_map
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_cnt_map_screen})
      )
      #endif
      (os_padtar
         (type uOnOFF)
         (bool {== $pad_inst kControllerGuitar})
         (sel_script
            {set $pad_inst
               {if_else {== $pad_inst kControllerGuitar}
                  kControllerVocals
                  kControllerGuitar
               }
            }
         )
      )
      (os_paddrum
         (type uOnOFF)
         (bool {== $pad_inst kControllerDrum})
         (sel_script
            {set $pad_inst
               {if_else {== $pad_inst kControllerDrum}
                  kControllerVocals
                  kControllerDrum
               }
            }
         )
      )
   ))
   (enter
      {os_setup_common}
      {os_fix_pos}
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {os_clear_pos}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {os_sel_common}
      {os_fix_pos}
   )
}
{new UIScreen
   overshell_cnt_screen
   (back overshell_main_screen)
   (panels overshell_cnt_panel practice_lower3rd_panel)
   (focus overshell_cnt_panel)
}
;could probably clean up a bit more at some point
{new UIPanel
   overshell_speed_panel
   (file "options/options_audio.milo")
   (focus instruments.btn)
   (enter
      {audio_options.lbl set text_token os_spd}
      {$this set_slider_steps}
      {$this hide_unused_sliders}
      {$this update_btn_ints}
      {$this update_all_sliders}
   )
   (TRANSITION_COMPLETE_MSG
      {$this update_helpbar {$this focus_name}}
      kDataUnhandled
   )
   (FOCUS_MSG {$this update_helpbar $new_focus})
   (SCROLL_SELECT_MSG {$this set_speeds})
   (SCROLL_MSG {$this set_speeds})
   (SELECT_MSG
      {switch $component
         (instruments.btn
            {instruments.sld store}
            {$this set_focus instruments.sld}
         )
         (background_music.btn
            {background.sld store}
            {$this set_focus background.sld}
         )
         (vocal_track.btn
            {vocal_track.sld store}
            {$this set_focus vocal_track.sld}
         )
      }
   )
   (BUTTON_DOWN_MSG
      {switch {$this focus_name}
         (instruments.sld
            {switch $action
               (kAction_Confirm
                  {instruments.sld confirm}
                  {$this set_focus instruments.btn}
               )
               (kAction_Cancel
                  {instruments.sld undo $player}
                  {$this set_focus instruments.btn}
               )
               kDataUnhandled
            }
         )
         (background.sld
            {switch $action
               (kAction_Confirm
                  {background.sld confirm}
                  {$this set_focus background_music.btn}
               )
               (kAction_Cancel
                  {background.sld undo $player}
                  {$this set_focus background_music.btn}
               )
               kDataUnhandled
            }
         )
         (vocal_track.sld
            {switch $action
               (kAction_Confirm
                  {vocal_track.sld confirm}
                  {$this set_focus vocal_track.btn}
               )
               (kAction_Cancel
                  {vocal_track.sld undo $player}
                  {$this set_focus vocal_track.btn}
               )
               kDataUnhandled
            }
         )
         kDataUnhandled
      }
   )
   (update_all_sliders {$this iterate UISlider $s {$this update_sliders $s}})
   (update_sliders
      ($component)
      {switch $component
         (instruments.sld
            {$component set_current {int {+ 0.5 {/ {+ {- $trackspeed 1} 0.5} 0.05}}}}
         )
         (background.sld
            {$component set_current {int {+ 0.5 {/ {- $speedmod 1} 0.05}}}}
         )
         (vocal_track.sld
            {$component set_current {int {+ 0.5 {/ {+ {- $hwlength 1} 0.5} 0.05}}}}
         )
      }
   )
   (set_speeds
      {set $trackspeed {- {+ 1 {* {instruments.sld current} 0.05}} 0.5}}
      {set $speedmod {+ 1 {* {background.sld current} 0.05}}}
      {set $hwlength {- {+ 1 {* {vocal_track.sld current} 0.05}} 0.5}}
      {$this update_btn_ints}
   )
   (set_slider_steps
      {instruments.sld set_num_steps 41}
      {background.sld set_num_steps 31}
      {vocal_track.sld set_num_steps 41}
   )
   (hide_unused_sliders
      {$this disable sfx.btn}
      {$this disable crowd.btn}
      {sfx.btn set_showing FALSE}
      {crowd.btn set_showing FALSE}
      {sfx.sld set_showing FALSE}
      {crowd.sld set_showing FALSE}
   )
   (update_btn_ints
      {instruments.btn set
         text_token
         {sprintf {localize trackspeed_msg} {int {+ 0.5 {* $trackspeed 100}}}}
      }
      {background_music.btn set
         text_token
         {sprintf {localize speed_msg} {int {+ 0.5 {* $speedmod 100}}}}
      }
      {vocal_track.btn set
         text_token
         {sprintf {localize hwlength_msg} {int {+ 0.5 {* $hwlength 100}}}}
      }
   )
   (update_helpbar
      ($new_focus)
      {switch $new_focus
         (
            (instruments.btn background_music.btn vocal_track.btn)
            {helpbar set_config
               (
                  (cancel helpbar_back)
                  (confirm helpbar_changesetting)
               )
            }
         )
         (
            (instruments.sld background.sld vocal_track.sld)
            {helpbar set_config
               (
                  (cancel helpbar_cancel)
                  (confirm helpbar_confirmsetting)
               )
            }
         )
      }
   )
}
{new UIScreen
   overshell_speed_screen
   (back overshell_main_screen)
   (panels options_background_panel overshell_speed_panel)
   (focus overshell_speed_panel)
}
{new UIPanel
   overshell_trk_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_trk)
   (data (
      (os_gems
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_gems_screen})
      )
      (os_gems_colors
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_gem_color_screen})
      )
      (os_smashers
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_smashers_screen})
      )
      (os_smashers_colors
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_smasher_color_screen})
      )
   ))
   (enter
      {os_setup_common}
      {os_fix_pos}
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {os_clear_pos}
      }
      kDataUnhandled
   )
   (SELECT_MSG {os_sel_common})
}
{new UIScreen
   overshell_trk_screen
   (back overshell_main_screen)
   (panels overshell_trk_panel practice_lower3rd_panel)
   (focus overshell_trk_panel)
}
{new UIPanel
   overshell_gems_panel
   OVERSHELL_LIST_FILE
   (title os_gems)
   (data (lrb rb3 rb2 tbrb gh2 gh3 ghwor ghl))
   (enter {os_setup_common})
   (SELECT_MSG
      {set $gems {$component selected_sym}}
      {pop_and_goto_screen overshell_trk_screen}
   )
}
{new UIScreen
   overshell_gems_screen
   (back overshell_trk_screen)
   (panels overshell_gems_panel practice_lower3rd_panel)
   (focus overshell_gems_panel)
}
{new UIPanel
   overshell_gem_color_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_gems_colors)
   (data (
      (os_gtr_gems_color
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_gtr_gem_color_screen})
      )
      (os_gtr_sus_color
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_gtr_sus_color_screen})
      )
      (os_drm_gems_color
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_drm_gem_color_screen})
      )
   ))
   (enter
      {os_setup_common}
      {os_fix_pos}
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {os_clear_pos}
      }
      kDataUnhandled
   )
   (SELECT_MSG {os_sel_common})
}
{new UIScreen
   overshell_gem_color_screen
   (back overshell_trk_screen)
   (panels overshell_gem_color_panel practice_lower3rd_panel)
   (focus overshell_gem_color_panel)
}
{new UIPanel
   overshell_gtr_gem_color_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_gtr_gems_color)
   (data (os_reset os_slot_1 os_slot_2 os_slot_3 os_slot_4 os_slot_5))
   (enter
      {os_setup_common}
      {os_fix_pos}
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {os_clear_pos}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {if_else {== {$component selected_sym} os_reset}
         {do
            {set $gtrgem1 0}
            {set $gtrgem2 1}
            {set $gtrgem3 2}
            {set $gtrgem4 3}
            {set $gtrgem5 4}
         }
         {pop_and_goto_screen overshell_gtr_gems_screen}
      }
   )
}
{new UIScreen
   overshell_gtr_gem_color_screen
   (back overshell_gem_color_screen)
   (panels overshell_gtr_gem_color_panel practice_lower3rd_panel)
   (focus overshell_gtr_gem_color_panel)
}
{new UIPanel
   overshell_drm_gem_color_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_drm_gems_color)
   (data (os_reset os_kick_gem os_slot_1 os_slot_2 os_slot_3 os_slot_4))
   (enter
      {os_setup_common}
      {os_fix_pos}
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {os_clear_pos}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {if_else {== {$component selected_sym} os_reset}
         {do
            {set $drmgem1 0}
            {set $drmgem2 1}
            {set $drmgem3 2}
            {set $drmgem4 3}
            {set $drmgem5 4}
         }
         {pop_and_goto_screen overshell_drm_gems_screen}
      }
   )
}
{new UIScreen
   overshell_drm_gem_color_screen
   (back overshell_gem_color_screen)
   (panels overshell_drm_gem_color_panel practice_lower3rd_panel)
   (focus overshell_drm_gem_color_panel)
}
{new UIPanel
   overshell_gtr_sus_color_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_gtr_sus_color)
   (data (os_reset os_slot_1 os_slot_2 os_slot_3 os_slot_4 os_slot_5))
   (enter
      {os_setup_common}
      {os_fix_pos}
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {os_clear_pos}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {if_else {== {$component selected_sym} os_reset}
         {do
            {set $gtrsus1 0}
            {set $gtrsus2 1}
            {set $gtrsus3 2}
            {set $gtrsus4 3}
            {set $gtrsus5 4}
         }
         {pop_and_goto_screen overshell_gtr_sus_screen}
      }
   )
}
{new UIScreen
   overshell_gtr_sus_color_screen
   (back overshell_gem_color_screen)
   (panels overshell_gtr_sus_color_panel practice_lower3rd_panel)
   (focus overshell_gtr_sus_color_panel)
}
{new UIPanel
   overshell_gtr_gems_panel
   OVERSHELL_LIST_FILE
   (title {sprint os_slot_ {overshell_gtr_gem_color_panel get pos}})
   (data (os_green_gem os_red_gem os_yellow_gem os_blue_gem os_orange_gem os_overdrive_gem))
   (enter {os_setup_common})
   (SELECT_MSG
      {set_var {sprint gtrgem {overshell_gtr_gem_color_panel get pos}}
         {switch {$component selected_sym}
            (os_green_gem 0)
            (os_red_gem 1)
            (os_yellow_gem 2)
            (os_blue_gem 3)
            (os_orange_gem 4)
            (os_overdrive_gem 5)
         }
      }
      {pop_and_goto_screen overshell_gtr_gem_color_screen}
   )
}
{new UIScreen
   overshell_gtr_gems_screen
   (back overshell_gtr_gem_color_screen)
   (panels overshell_gtr_gems_panel practice_lower3rd_panel)
   (focus overshell_gtr_gems_panel)
}
{new UIPanel
   overshell_drm_gems_panel
   OVERSHELL_LIST_FILE
   (title os_drm_gems_color)  ; intentional. accounting for kick is annoying
   (data (os_red_gem os_yellow_gem os_blue_gem os_green_gem os_kick_gem os_overdrive_gem))
   (enter {os_setup_common})
   (SELECT_MSG
      {set_var {sprint drmgem {overshell_drm_gem_color_panel get pos}}
         {switch {$component selected_sym}
            (os_kick_gem 0)
            (os_red_gem 1)
            (os_yellow_gem 2)
            (os_blue_gem 3)
            (os_green_gem 4)
            (os_overdrive_gem 5)
         }
      }
      {pop_and_goto_screen overshell_drm_gem_color_screen}
   )
}
{new UIScreen
   overshell_drm_gems_screen
   (back overshell_drm_gem_color_screen)
   (panels overshell_drm_gems_panel practice_lower3rd_panel)
   (focus overshell_drm_gems_panel)
}
{new UIPanel
   overshell_gtr_sus_panel
   OVERSHELL_LIST_FILE
   (title {sprint os_slot_ {overshell_gtr_sus_color_panel get pos}})
   (data (os_green_gem os_red_gem os_yellow_gem os_blue_gem os_orange_gem))
   (enter {os_setup_common})
   (SELECT_MSG
      {set_var {sprint gtrsus {overshell_gtr_sus_color_panel get pos}}
         {switch {$component selected_sym}
            (os_green_gem 0)
            (os_red_gem 1)
            (os_yellow_gem 2)
            (os_blue_gem 3)
            (os_orange_gem 4)
            (os_overdrive_gem 5)
         }
      }
      {pop_and_goto_screen overshell_gtr_sus_color_screen}
   )
}
{new UIScreen
   overshell_gtr_sus_screen
   (back overshell_gtr_sus_color_screen)
   (panels overshell_gtr_sus_panel practice_lower3rd_panel)
   (focus overshell_gtr_sus_panel)
}
{new UIPanel
   overshell_smashers_panel
   OVERSHELL_LIST_FILE
   (title os_smashers)
   (data (lrb rb2 rb1 rb1_alt))
   (enter {os_setup_common})
   (SELECT_MSG
      {set $smashers {$component selected_sym}}
      {pop_and_goto_screen overshell_trk_screen}
   )
}
{new UIScreen
   overshell_smashers_screen
   (back overshell_trk_screen)
   (panels overshell_smashers_panel practice_lower3rd_panel)
   (focus overshell_smashers_panel)
}
{new UIPanel
   overshell_smasher_color_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_smashers_colors)
   (data (
      (os_gtr_smasher_color
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_gtr_smasher_color_screen})
      )
      (os_drm_smasher_color
         (type uNormal)
         (sel_script {pop_and_goto_screen overshell_drm_smasher_color_screen})
      )
   ))
   (enter
      {os_setup_common}
      {os_fix_pos}
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {os_clear_pos}
      }
      kDataUnhandled
   )
   (SELECT_MSG {os_sel_common})
}
{new UIScreen
   overshell_smasher_color_screen
   (back overshell_trk_screen)
   (panels overshell_smasher_color_panel practice_lower3rd_panel)
   (focus overshell_smasher_color_panel)
}
{new UIPanel
   overshell_gtr_smasher_color_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_gtr_smasher_color)
   (data (os_reset os_slot_1 os_slot_2 os_slot_3 os_slot_4 os_slot_5))
   (enter
      {os_setup_common}
      {os_fix_pos}
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {os_clear_pos}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {if_else {== {$component selected_sym} os_reset}
         {do
            {set $gtrsm1 0}
            {set $gtrsm2 1}
            {set $gtrsm3 2}
            {set $gtrsm4 3}
            {set $gtrsm5 4}
         }
         {pop_and_goto_screen overshell_gtr_smasher_screen}
      }
   )
}
{new UIScreen
   overshell_gtr_smasher_color_screen
   (back overshell_smasher_color_screen)
   (panels overshell_gtr_smasher_color_panel practice_lower3rd_panel)
   (focus overshell_gtr_smasher_color_panel)
}
{new UIPanel
   overshell_drm_smasher_color_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_drm_smasher_color)
   (data (os_reset os_slot_1 os_slot_2 os_slot_3 os_slot_4 os_slot_5))
   (enter
      {os_setup_common}
      {os_fix_pos}
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {os_clear_pos}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {if_else {== {$component selected_sym} os_reset}
         {do
            {set $drms1 1}
            {set $drms2 2}
            {set $drms3 3}
            {set $drms4 0}
         }
         {pop_and_goto_screen overshell_drm_smasher_screen}
      }
   )
}
{new UIScreen
   overshell_drm_smasher_color_screen
   (back overshell_smasher_color_screen)
   (panels overshell_drm_smasher_color_panel practice_lower3rd_panel)
   (focus overshell_drm_smasher_color_panel)
}
{new UIPanel
   overshell_gtr_smasher_panel
   OVERSHELL_LIST_FILE
   (title {sprint os_slot_ {overshell_gtr_smasher_color_panel get pos}})
   (data (os_green_gem os_red_gem os_yellow_gem os_blue_gem os_orange_gem))
   (enter {os_setup_common})
   (SELECT_MSG
      {set_var {sprint gtrsm {overshell_gtr_smasher_color_panel get pos}}
         {switch {$component selected_sym}
            (os_green_gem 0)
            (os_red_gem 1)
            (os_yellow_gem 2)
            (os_blue_gem 3)
            (os_orange_gem 4)
         }
      }
      {pop_and_goto_screen overshell_gtr_smasher_color_screen}
   )
}
{new UIScreen
   overshell_gtr_smasher_screen
   (back overshell_gtr_smasher_color_screen)
   (panels overshell_gtr_smasher_panel practice_lower3rd_panel)
   (focus overshell_gtr_smasher_panel)
}
{new UIPanel
   overshell_drm_smasher_panel
   OVERSHELL_LIST_FILE
   (title {sprint os_slot_ {overshell_drm_smasher_color_panel get pos}})
   (data (os_red_gem os_yellow_gem os_blue_gem os_green_gem os_orange_gem))
   (enter {os_setup_common})
   (SELECT_MSG
      {set_var {sprint drms {overshell_drm_smasher_color_panel get pos}}
         {switch {$component selected_sym}
            (os_red_gem 1)
            (os_yellow_gem 2)
            (os_blue_gem 3)
            (os_green_gem 0)
            (os_orange_gem 4)
         }
      }
      {pop_and_goto_screen overshell_drm_smasher_color_screen}
   )
}
{new UIScreen
   overshell_drm_smasher_screen
   (back overshell_drm_smasher_color_screen)
   (panels overshell_drm_smasher_panel practice_lower3rd_panel)
   (focus overshell_drm_smasher_panel)
}
{new UIPanel
   overshell_remap_cnt_panel
   OVERSHELL_LIST_FILE
   OVERSHELL_SAVE_POS
   (title os_remap_cnt)
   (data (os_reset os_slot_1 os_slot_2 os_slot_3 os_slot_4 os_slot_5 os_spotlight))
   (enter
      {os_setup_common}
      {os_fix_pos}
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {os_clear_pos}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {if_else {== {$component selected_sym} os_reset}
         {do
            #ifdef HX_NG
            {set $cnt_slot1 kPad_L2}
            {set $cnt_slot2 kPad_L1}
            {set $cnt_slot3 kPad_R1}
            {set $cnt_slot4 kPad_R2}
            {set $cnt_slot5 kPad_X}
            {set $cnt_star kPad_Select}
            #else
            {set $cnt_slot1 kPad_Circle}
            {set $cnt_slot2 kPad_DRight}
            {set $cnt_slot3 kPad_X}
            {set $cnt_slot4 kPad_Square}
            {set $cnt_slot5 kPad_Tri}
            {set $cnt_star kPad_DLeft}
            #endif
         }
         {pop_and_goto_screen overshell_cnt_slot_screen}
      }
   )
}
{new UIScreen
   overshell_remap_cnt_screen
   (back overshell_cnt_screen)
   (panels overshell_remap_cnt_panel practice_lower3rd_panel)
   (focus overshell_remap_cnt_panel)
}
{new UIPanel
   overshell_cnt_slot_panel
   OVERSHELL_LIST_FILE
   (title {sprint os_slot_ {overshell_remap_cnt_panel get pos}})
   (data
      #ifdef HX_NG
      (
         os_pad_l2
         os_pad_l1
         os_pad_r1
         os_pad_r2
         os_pad_x
         os_pad_circle
         os_pad_square
         os_pad_tri
         os_pad_dup
         os_pad_ddown
         os_pad_dleft
         os_pad_dright
         os_pad_l3
         os_pad_r3
         os_pad_select
      )
      #else
      (
         os_pad_x
         os_pad_circle
         os_pad_square
         os_pad_tri
         os_pad_dup
         os_pad_ddown
         os_pad_dleft
         os_pad_dright
         os_pad_select
      )
      #endif
   )
   (enter {os_setup_common})
   (SELECT_MSG
      {set_var
         {do
            ($pos {overshell_remap_cnt_panel get pos})
            {if_else {== $pos 6}
               cnt_star
               {sprint cnt_slot $pos}
            }
         }
         {switch {$component selected_sym}
            (os_pad_l2 kPad_L2)
            (os_pad_l1 kPad_L1)
            (os_pad_r1 kPad_R1)
            (os_pad_r2 kPad_R2)
            (os_pad_x kPad_X)
            (os_pad_circle kPad_Circle)
            (os_pad_square kPad_Square)
            (os_pad_tri kPad_Tri)
            (os_pad_dup kPad_DUp)
            (os_pad_ddown kPad_DDown)
            (os_pad_dleft kPad_DLeft)
            (os_pad_dright kPad_DRight)
            (os_pad_l3 kPad_L3)
            (os_pad_r3 kPad_R3)
            (os_pad_select kPad_Select)
         }
      }
      {pop_and_goto_screen overshell_remap_cnt_screen}
   )
}
{new UIScreen
   overshell_cnt_slot_screen
   (back overshell_remap_cnt_screen)
   (panels overshell_cnt_slot_panel practice_lower3rd_panel)
   (focus overshell_cnt_slot_panel)
}
{new UIPanel
   overshell_cnt_map_panel
   OVERSHELL_LIST_FILE
   (title os_cnt_map)
   (data (custom guitar gh_guitar ps2_guitar drum))
   (enter {os_setup_common})
   (SELECT_MSG
      {set $pad_map
         {switch {$component selected_sym}
            (custom 0)
            (guitar 1)
            (gh_guitar 2)
            (ps2_guitar 3)
            (drum 4)
         }
      }
      {set_pad_map $pad_map}
      {pop_and_goto_screen overshell_cnt_screen}
   )
}
{new UIScreen
   overshell_cnt_map_screen
   (back overshell_cnt_screen)
   (panels overshell_cnt_map_panel practice_lower3rd_panel)
   (focus overshell_cnt_map_panel)
}